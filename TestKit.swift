//
//  TestKit.swift
//  How Much Am I Spending?
//
//  Created by Shayne on 7/30/16.
//  Copyright (c) 2016 Sptorres. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class TestKit : NSObject {

    //// Drawing Methods

    public class func drawChatBubble(frame frame: CGRect = CGRectMake(17, 15, 193, 84), innerText: String = "Hello, World!") {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()


        //// Shadow Declarations
        let shadow = NSShadow()
        shadow.shadowColor = UIColor.blackColor()
        shadow.shadowOffset = CGSizeMake(3.1, 3.1)
        shadow.shadowBlurRadius = 5

        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.moveToPoint(CGPointMake(frame.maxX - 20.05, frame.minY + 12.5))
        bezier2Path.addCurveToPoint(CGPointMake(frame.maxX - 15.19, frame.minY + 12.96), controlPoint1: CGPointMake(frame.maxX - 17.71, frame.minY + 12.51), controlPoint2: CGPointMake(frame.maxX - 16.39, frame.minY + 12.56))
        bezier2Path.addLineToPoint(CGPointMake(frame.maxX - 14.92, frame.minY + 13.02))
        bezier2Path.addCurveToPoint(CGPointMake(frame.maxX - 11.02, frame.minY + 16.92), controlPoint1: CGPointMake(frame.maxX - 13.11, frame.minY + 13.68), controlPoint2: CGPointMake(frame.maxX - 11.68, frame.minY + 15.11))
        bezier2Path.addCurveToPoint(CGPointMake(frame.maxX - 10.5, frame.minY + 23.2), controlPoint1: CGPointMake(frame.maxX - 10.5, frame.minY + 18.58), controlPoint2: CGPointMake(frame.maxX - 10.5, frame.minY + 20.12))
        bezier2Path.addLineToPoint(CGPointMake(frame.maxX - 10.5, frame.maxY - 42.2))
        bezier2Path.addCurveToPoint(CGPointMake(frame.maxX - 10.96, frame.maxY - 36.19), controlPoint1: CGPointMake(frame.maxX - 10.5, frame.maxY - 39.12), controlPoint2: CGPointMake(frame.maxX - 10.5, frame.maxY - 37.58))
        bezier2Path.addLineToPoint(CGPointMake(frame.maxX - 11.02, frame.maxY - 35.92))
        bezier2Path.addCurveToPoint(CGPointMake(frame.maxX - 14.92, frame.maxY - 32.02), controlPoint1: CGPointMake(frame.maxX - 11.68, frame.maxY - 34.11), controlPoint2: CGPointMake(frame.maxX - 13.11, frame.maxY - 32.68))
        bezier2Path.addCurveToPoint(CGPointMake(frame.maxX - 17.65, frame.maxY - 31.56), controlPoint1: CGPointMake(frame.maxX - 15.78, frame.maxY - 31.75), controlPoint2: CGPointMake(frame.maxX - 16.62, frame.maxY - 31.62))
        bezier2Path.addCurveToPoint(CGPointMake(frame.maxX - 17, frame.maxY - 28), controlPoint1: CGPointMake(frame.maxX - 17.23, frame.maxY - 30.45), controlPoint2: CGPointMake(frame.maxX - 17, frame.maxY - 29.25))
        bezier2Path.addCurveToPoint(CGPointMake(frame.maxX - 19.12, frame.maxY - 21.84), controlPoint1: CGPointMake(frame.maxX - 17, frame.maxY - 25.68), controlPoint2: CGPointMake(frame.maxX - 17.79, frame.maxY - 23.54))
        bezier2Path.addCurveToPoint(CGPointMake(frame.maxX - 17, frame.maxY - 17.5), controlPoint1: CGPointMake(frame.maxX - 17.83, frame.maxY - 20.83), controlPoint2: CGPointMake(frame.maxX - 17, frame.maxY - 19.26))
        bezier2Path.addCurveToPoint(CGPointMake(frame.maxX - 22.5, frame.maxY - 12), controlPoint1: CGPointMake(frame.maxX - 17, frame.maxY - 14.46), controlPoint2: CGPointMake(frame.maxX - 19.46, frame.maxY - 12))
        bezier2Path.addCurveToPoint(CGPointMake(frame.maxX - 28, frame.maxY - 17.5), controlPoint1: CGPointMake(frame.maxX - 25.54, frame.maxY - 12), controlPoint2: CGPointMake(frame.maxX - 28, frame.maxY - 14.46))
        bezier2Path.addCurveToPoint(CGPointMake(frame.maxX - 27.97, frame.maxY - 18.05), controlPoint1: CGPointMake(frame.maxX - 28, frame.maxY - 17.68), controlPoint2: CGPointMake(frame.maxX - 27.99, frame.maxY - 17.87))
        bezier2Path.addCurveToPoint(CGPointMake(frame.maxX - 37, frame.maxY - 28), controlPoint1: CGPointMake(frame.maxX - 33.04, frame.maxY - 18.54), controlPoint2: CGPointMake(frame.maxX - 37, frame.maxY - 22.81))
        bezier2Path.addCurveToPoint(CGPointMake(frame.maxX - 36.37, frame.maxY - 31.5), controlPoint1: CGPointMake(frame.maxX - 37, frame.maxY - 29.23), controlPoint2: CGPointMake(frame.maxX - 36.78, frame.maxY - 30.41))
        bezier2Path.addLineToPoint(CGPointMake(frame.minX + 21.2, frame.maxY - 31.5))
        bezier2Path.addCurveToPoint(CGPointMake(frame.minX + 15.19, frame.maxY - 31.96), controlPoint1: CGPointMake(frame.minX + 18.12, frame.maxY - 31.5), controlPoint2: CGPointMake(frame.minX + 16.58, frame.maxY - 31.5))
        bezier2Path.addLineToPoint(CGPointMake(frame.minX + 14.92, frame.maxY - 32.02))
        bezier2Path.addCurveToPoint(CGPointMake(frame.minX + 11.02, frame.maxY - 35.92), controlPoint1: CGPointMake(frame.minX + 13.11, frame.maxY - 32.68), controlPoint2: CGPointMake(frame.minX + 11.68, frame.maxY - 34.11))
        bezier2Path.addCurveToPoint(CGPointMake(frame.minX + 10.5, frame.maxY - 42.2), controlPoint1: CGPointMake(frame.minX + 10.5, frame.maxY - 37.58), controlPoint2: CGPointMake(frame.minX + 10.5, frame.maxY - 39.12))
        bezier2Path.addLineToPoint(CGPointMake(frame.minX + 10.5, frame.minY + 23.2))
        bezier2Path.addCurveToPoint(CGPointMake(frame.minX + 10.96, frame.minY + 17.19), controlPoint1: CGPointMake(frame.minX + 10.5, frame.minY + 20.12), controlPoint2: CGPointMake(frame.minX + 10.5, frame.minY + 18.58))
        bezier2Path.addLineToPoint(CGPointMake(frame.minX + 11.02, frame.minY + 16.92))
        bezier2Path.addCurveToPoint(CGPointMake(frame.minX + 14.92, frame.minY + 13.02), controlPoint1: CGPointMake(frame.minX + 11.68, frame.minY + 15.11), controlPoint2: CGPointMake(frame.minX + 13.11, frame.minY + 13.68))
        bezier2Path.addCurveToPoint(CGPointMake(frame.minX + 21.2, frame.minY + 12.5), controlPoint1: CGPointMake(frame.minX + 16.58, frame.minY + 12.5), controlPoint2: CGPointMake(frame.minX + 18.12, frame.minY + 12.5))
        bezier2Path.addLineToPoint(CGPointMake(frame.maxX - 21.2, frame.minY + 12.5))
        bezier2Path.addCurveToPoint(CGPointMake(frame.maxX - 20.05, frame.minY + 12.5), controlPoint1: CGPointMake(frame.maxX - 20.79, frame.minY + 12.5), controlPoint2: CGPointMake(frame.maxX - 20.41, frame.minY + 12.5))
        bezier2Path.closePath()
        CGContextSaveGState(context)
        CGContextSetShadowWithColor(context, shadow.shadowOffset, shadow.shadowBlurRadius, (shadow.shadowColor as! UIColor).CGColor)
        UIColor.greenColor().setFill()
        bezier2Path.fill()
        CGContextRestoreGState(context)

        UIColor.blackColor().setStroke()
        bezier2Path.lineWidth = 3
        bezier2Path.stroke()


        //// Text Drawing
        let textRect = CGRectMake(frame.minX + floor((frame.width - 10) * 0.05464 + 0.5), frame.minY + floor((frame.height - 31) * 0.22642 + 0.5), frame.width - 10 - floor((frame.width - 10) * 0.05464 + 0.5), frame.height - 31 - floor((frame.height - 31) * 0.22642 + 0.5))
        let textTextContent = NSString(string: "Hello, World!")
        let textStyle = NSParagraphStyle.defaultParagraphStyle().mutableCopy() as! NSMutableParagraphStyle
        textStyle.alignment = .Center

        let textFontAttributes = [NSFontAttributeName: UIFont(name: "HelveticaNeue", size: 12)!, NSForegroundColorAttributeName: UIColor.blackColor(), NSParagraphStyleAttributeName: textStyle]

        let textInset: CGRect = CGRectInset(textRect, 4, 4)
        let textTextHeight: CGFloat = textTextContent.boundingRectWithSize(CGSizeMake(textInset.width, CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: textFontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, textInset);
        textTextContent.drawInRect(CGRectMake(textInset.minX, textInset.minY + (textInset.height - textTextHeight) / 2, textInset.width, textTextHeight), withAttributes: textFontAttributes)
        CGContextRestoreGState(context)
    }

    //// Generated Images

    public class func imageOfChatBubble(frame frame: CGRect = CGRectMake(17, 15, 193, 84), innerText: String = "Hello, World!") -> UIImage {
        UIGraphicsBeginImageContextWithOptions(frame.size, false, 0)
            TestKit.drawChatBubble(frame: CGRectMake(0, 0, frame.size.width, frame.size.height), innerText: innerText)

        let imageOfChatBubble = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return imageOfChatBubble
    }

}
